let handler = async (m, { conn, usedPrefix, command, args, isOwner, isAdmin, isROwner }) => {
let optionsFull = "* ุงูุฎูุงุฑ:* โจ |  ูุฑุญุจุงู
* ุงูุฃูุฑ:* ูุฑุญุจูุง ${usedPrefix + command}
* ุงููุตู:* ุชูุดูุท ุฃู ุฅูุบุงุก ุชูุดูุท ุงูุชุฑุญูุจ ูู ุงููุฌููุนุฉ.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ุงููุถุน ุงูุนุงู
* ุงูุฃูุฑ:* ${usedPrefix + command} ุนุงู
* ุงููุตู:* ูุตุจุญ ุงูุฑูุจูุช ููุงุณุชุฎุฏุงู ุงูุนุงู ู / ุฃู ุงูุฎุงุต.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ฅต |  ุงููุถุน HORNY
* ุงูุฃูุฑ:* ${usedPrefix + command} ูุถุน ุงููุฑู
* ุงููุตู:* ุชูุดูุท ุฃู ุฅูุบุงุก ุชูุดูุท ุฃูุงูุฑ +18 ูู ุงููุฌููุนุฉ.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ูุถุงุฏ ููุฑุจุท
* ุงูุฃูุฑ:* ${usedPrefix + command} antilink
* ุงููุตู:* ุชูุดูุท ุฃู ุฅูุบุงุก ุชูุดูุท ูุงูุน ุงูุฑูุงุจุท ูู WhatsApp.
* ููุงุญุธุฉ:* ูุฌุจ ุฃู ูููู ุงูุชูููุฏ ูุดุทูุง.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ูุถุงุฏ ููุงุฑุชุจุงุท 2
* ุงูุฃูุฑ:* ${usedPrefix + command} antilink2
* ุงููุตู:* ุชูููู ุฃู ุชุนุทูู ุงูุฑูุงุจุท ุงููุถุงุฏุฉ ุจุฏุกูุง ูู HTTPS.
* ููุงุญุธุฉ:* ูุฌุจ ุฃู ูููู ุงูุชูููุฏ ูุดุทูุง.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ููุดู
* ุงูุฃูุฑ:* ${usedPrefix + command} ููุชุดู
* ุงููุตู:* ุชูุดูุท ุฃู ุฅูุบุงุก ุชูุดูุท ุฅุดุนุงุฑุงุช ุงูุชุบููุฑุงุช ูู ุงููุฌููุนุฉ.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ูุดู 2
* ุงูุฃูุฑ:* ${usedPrefix + command} discovery2
* ุงููุตู:* ููุชุดู ุงูุชุบููุฑุงุช ูู ุงููุฌููุนุฉ ููุญุงูุธ ุนูู ุฅุฏุงุฑุฉ ุฃูุถู.

 --------------------------------

* ุงูุฎูุงุฑ:* โ |  ูููุฏ
* ุงูุฃูุฑ:* ุชูููุฏ ${usedPrefix + command}
* ุงููุตู:* ูู ุจุชุดุบูู ูููุฏ ุงูุฑูุจูุช ุฃู ุฅููุงู ุชุดุบูููุง ุ ูุซู ุฅุฒุงูุฉ ุฃู ุฅุถุงูุฉ ุฃุดุฎุงุต ุฅูู ูุฌููุนุฉ.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* โ๏ธ |  ุฃูุชูุฑูุงุฏ
* ุงูุฃูุฑ:* ${usedPrefix + command} ูููุฑุงุกุฉ ุงูุชููุงุฆูุฉ
* ุงููุตู:* ุชุนููู ุงูุฑุณุงุฆู ูุงูุญุงูุงุช ุชููุงุฆููุง ูููุฑูุกุฉ.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ุงุตูุงุช
* ุงูุฃูุฑ:* ุตูุช ${usedPrefix + command}
* ุงููุตู:* ููุดุท ุฃู ููุบู ุชูุดูุท ุฃูุงูุฑ ุงูุตูุช ุจุฏูู ุจุงุฏุฆุงุช ุ ูู ุงููุฌููุนุฉ.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐พ |  ุฃูุชูุณุชููุฑ
* ุงูุฃูุฑ:* ููุตู ุชููุงุฆู ${usedPrefix + command}
* ุงููุตู:* ุชุตุจุญ ุฌููุน ุงูุตูุฑ ุฃู ููุงุทุน ุงูููุฏูู ุงููุฑุณูุฉ ูู ุงููุฌููุนุฉ ููุตูุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ฌ |  ููุท
* ุงูุฃูุฑ:* ${usedPrefix + command} pconly
* ุงููุตู:* ูู ูุณุชุฌูุจ ุงูุฑูุจูุช ููุฃูุงูุฑ ุฅูุง ุฅุฐุง ูุงูุช ูุญุงุฏุซุฉ ุฎุงุตุฉ.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ข |  ููุท
* ุงูุฃูุฑ:* ${usedPrefix + command} gconly
* ุงููุตู:* ูู ูุณุชุฌูุจ ุงูุฑูุจูุช ููุฃูุงูุฑ ุฅูุง ุฅุฐุง ูุงูุช ูุฌููุนุฉ.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* โ |  ููุชุทูุงุช ูุฑุฉ ูุงุญุฏุฉ
* ุงูุฃูุฑ:* ${usedPrefix + command} antiviewonce
* ุงููุตู:* ุงูุตูุฑ ุงูุชู ูุชู ุฅุฑุณุงููุง ูููุดุงูุฏุฉ ูุฑุฉ ูุงุญุฏุฉ ููุท ุ ูุชู ุฅุฑุณุงููุง ุจุดูู ุทุจูุนู ุจูุงุณุทุฉ ุงูุฑูุจูุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ต |  ููุน ุงูููุงููุงุช
* ุงูุฃูุฑ:* ${usedPrefix + command} ุถุฏ ุงูููุงููุฉ
* ุงููุตู:* ุณูููู ุงูุฑูุจูุช ุจุญุธุฑ ุงูุฃุดุฎุงุต ุงูุฐูู ูุชุตููู ุจู.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ฌ |  ููุงูุญุฉ ุฎุงุตุฉ
* ุงูุฃูุฑ:* ${usedPrefix + command} antiprivate
* ุงููุตู:* ุณูููู ุงูุฑูุจูุช ุจุญุธุฑ ุงูุฃุดุฎุงุต ุงูุฐูู ููุชุจูู ุฅูู ุฑุณุงูุฉ ุงูุฑูุจูุช ุงูุฎุงุตุฉ.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐คฌ |  ูุถุงุฏ ููุณููู
* ุงูุฃูุฑ:* ${usedPrefix + command} ูุถุงุฏ ููุณููู
* ุงููุตู:* ููุชุดู ุงููููุงุช ุงูุจุฐูุฆุฉ ููุญุฐุฑ ูุดุงุฑู ุงููุฌููุนุฉ ูุจู ุงุณุชุจุนุงุฏู.
* ููุงุญุธุฉ:* ูุฌุจ ุฃู ูููู ุงูุชูููุฏ ูุดุทูุง.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ธ๏ธ |  ูุถุงุฏ ููุงูุญุดุงุฑ
* ุงูุฃูุฑ:* ${usedPrefix + command} ุถุฏ ุงูุงูุญุดุงุฑ
* ุงููุตู:* ููุชุดู ุงูุฑูุจูุช ุงููุตูุต ุงูุทูููุฉ ุงูุชู ูููู ุฃู ุชููู ููุฑูุณุงุช ูุชุชุณุจุจ ูู ุชุฃุฎุฑ ุงูุฏุฑุฏุดุฉ ููุญุฐู ุงููุณุชุฎุฏู.
* ููุงุญุธุฉ:* ูุฌุจ ุฃู ูููู ุงูุชูููุฏ ูุดุทูุง.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ูุนุงุฏุงุฉ ุงูุนุฑุจ
* ุงูุฃูุฑ:* ${usedPrefix + command} ุถุฏ ุงูุนุฑุจ
* ุงููุตู:* ูู ุญุงูุฉ ุงูุถูุงู ุฑูู ุนุฑุจู ุฅูู ุงููุฌููุนุฉ ุ ูููู ุงูุฑูุจูุช ุจุฅุฒุงูุชู ุชููุงุฆููุง.
* ููุงุญุธุฉ:* ูุฌุจ ุฃู ูููู ุงูุชุฑุญูุจ ูุงูุชูููุฏ ูุดุทูุง.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ููุงูุญุฉ ุงูุนุฑุจ 2
* ุงูุฃูุฑ:* ${usedPrefix + command} antiarabes2
* ุงููุตู:* ูู ุญุงูุฉ ูุชุงุจุฉ ุฑูู ุนุฑุจู ูู ุงููุฌููุนุฉ ุ ูููู ุงูุฑูุจูุช ุจุญุฐูู ุชููุงุฆููุง.
* ููุงุญุธุฉ:* ูุฌุจ ุฃู ูููู ุงูุชูููุฏ ูุดุทูุง.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ค |  ููุฏูุฌุงุฏูุจูุช
* ุงูุฃูุฑ:* ${usedPrefix + command} modejadibot
* ุงููุตู:* ูุชูููู ุฃู ุชุนุทูู ุงุณุชุฎุฏุงู ุงูุฃูุฑ ููุฑูุจูุชุงุช ุงููุฑุนูุฉ ($ {usedPrefix} serbot / ${usedPrefix} jadibot).
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุชุงุช.

 --------------------------------

* ุงูุฎูุงุฑ:* ๐ |  ูุถุน ุงููุดุฑู
* ุงูุฃูุฑ:* ${usedPrefix + command} ูุถุน ุงูุฅุฏุงุฑุฉ
* ุงููุตู:* ูู ูุณุชุฌูุจ ุงูุฑูุจูุช ุฅูุง ููุณุคููู ุงููุฌููุนุฉ.

--------------------------------

** ุงูุฎูุงุฑ:* ๐ |  ุณููุณููู
* ุงูุฃูุฑ:* simsimi ${usedPrefix + command}
* ุงููุตู:* ุณูุจุฏุฃ ุงูุฑูุจูุช ูู ุงูุฑุฏ ุนูู ุงูุฑุณุงุฆู ุจุงุณุชุฎุฏุงู SimSimi's AI.

 --------------------------------

* ุงูุฎูุงุฑ:* โณ |  ููุงูุญุฉ ุงูุจุฑูุฏ ุงููุฒุนุฌ
*ุงูุฃูุฑ:* ${usedPrefix + command} ุถุฏ ุงูุจุฑูุฏ ุงูุนุดูุงุฆู
* ุงููุตู:* ููุชุดู ุงูุฑูุจูุช ุนูุฏูุง ูุฑุณู ุงููุณุชุฎุฏู ุงูุฃูุฑ ุจุงูุจุฑูุฏ ุงูุฅููุชุฑููู ููุญุธุฑู ููุฏุฉ 5 ุซูุงู ููุญุฐุฑู.
* ููุงุญุธุฉ:* ูุง ูููู ุงุณุชุฎุฏุงู ูุฐุง ุงูุฃูุฑ ุฅูุง ูู ูุจู ูุงููู ุงูุฑูุจูุช..`trim()

let isEnable = /true|enable|(turn)?on|1/i.test(command)
let chat = global.db.data.chats[m.chat]
let user = global.db.data.users[m.sender]
let bot = global.db.data.settings[conn.user.jid] || {}
let type = (args[0] || '').toLowerCase()
let isAll = false, isUser = false
switch (type) {
case 'welcome':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!(isAdmin || isOwner || isROwner)) {
global.dfail('admin', m, conn)
throw false
}
chat.welcome = isEnable
break
case 'detect':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!isAdmin) {
global.dfail('admin', m, conn)
throw false
}
chat.detect = isEnable
break
case 'detect2':
if (!m.isGroup) {
if (!isOwner) {
global.dfail('group', m, conn)
throw false
}
} else if (!isAdmin) {
global.dfail('admin', m, conn)
throw false
}
chat.detect2 = isEnable
break    
case 'simsimi':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.simi = isEnable
break   
case 'antiporno':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiporno = isEnable
break        
case 'delete':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.delete = isEnable
break
case 'antidelete':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.delete = !isEnable
break
case 'public':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['self'] = !isEnable
break
case 'antilink':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink = isEnable
break
case 'antilink2':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiLink2 = isEnable 
break
case 'antiviewonce':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiviewonce = isEnable 
break
case 'modohorny':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.modohorny = isEnable          
break
case 'modoadmin':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.modoadmin = isEnable          
break    
case 'autosticker':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.autosticker = isEnable          
break
case 'audios':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.audios = isEnable          
break
case 'restrict':
isAll = true
if (!isOwner) {
global.dfail('owner', m, conn)
throw false
}
bot.restrict = isEnable
break
case 'nyimak':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['nyimak'] = isEnable
break
case 'autoread':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.autoread2 = isEnable    
global.opts['autoread'] = isEnable  
break
case 'pconly':
case 'privateonly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['pconly'] = isEnable
break
case 'gconly':
case 'grouponly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['gconly'] = isEnable
break
case 'swonly':
case 'statusonly':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
global.opts['swonly'] = isEnable
break
case 'anticall':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antiCall = isEnable
break
case 'antiprivado':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antiPrivate = isEnable
break
case 'modejadibot':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.modejadibot = isEnable
break     
case 'antispam':
isAll = true
if (!isROwner) {
global.dfail('rowner', m, conn)
throw false
}
bot.antispam = isEnable    
break
case 'antitoxic':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiToxic = isEnable
break
case 'antitraba':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiTraba = isEnable
break
case 'antiarabes':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiArab = isEnable  
break
case 'antiarabes2':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.antiArab2 = isEnable  
break    
default:
if (!/[01]/.test(command)) return await conn.sendMessage(m.chat, { text: optionsFull }, { quoted: m })
throw false
}
conn.sendMessage(m.chat, { text: `๐๏ธ ๐๐๐๐๐๐: ${type}\n๐๏ธ ๐๐๐๐๐๐: ${isEnable ? 'ACTIVADO' : 'DESACTIVADO'}\n๐ฃ ๐๐๐๐: ${isAll ? 'ESTE BOT' : isUser ? '' : 'ESTE CHAT'}` }, { quoted: m })        
}
handler.help = ['en', 'dis'].map(v => v + 'able <option>')
handler.tags = ['group', 'owner']
handler.command = /^((en|dis)able|(tru|fals)e|(turn)?[01])$/i
export default handler
